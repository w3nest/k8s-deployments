##### Global values
##
# Job uuid − could be any string, the Job/Cronjob metadata.uid in kubernetes workload
JOB_UUID="test_archive"
# Type backup, must be a folder in google drive
TYPE_BACKUP="manual"
# Google drive id : the drive to use
GOOGLE_DRIVE_ID="drive_id"

#### Define in docker
##
# Local directory where everything is stored − must exist
# In kubernetes workload this is a volume shared betwween containers
PATH_WORK_DIR="/tmp/test_work"
# Minio client binary (see https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart for installation)
PATH_MINIO_CLIENT="/home/user/.local/bin/mc"
# A directory for minio client config, will be created if not exist
PATH_MINIO_CLIENT_CONFIG="/tmp/mc_config"
# For local run, use kubectl exec to run inside cluster
#CQLSH_COMMAND="/opt/venv/bin/cqlsh"
CQLSH_COMMAND="kubectl --context monte-pissis exec -i --namespace infra service/scylla-db-client -c scylla -- /usr/bin/cqlsh -e"
# A non-existing file
PATH_LOG_FILE="/tmp/test.log"

#### S3
# List of S3 buckets − only some of them for testing
#S3_BUCKETS="assets:cdn:cdn-sessions-storage:data:flux:stories"
S3_BUCKETS="cdn-sessions-storage:stories"
# Local instannce : host default to localhost
# In kubernetes workload this is a sidecar container, in the same pod
# Locally can be run with:
# source .env && docker run --rm -p 127.0.0.1:9000:9000 \
#   -e "MINIO_ROOT_USER=$MINIO_LOCAL_ACCESS_KEY" \
#   -e "MINIO_ROOT_PASSWORD=$MINIO_LOCAL_SECRET_KEY" -v \
# $PATH_WORK_DIR/minio:/data quay.io/minio/minio server /data
MINIO_LOCAL_ACCESS_KEY="root"
MINIO_LOCAL_SECRET_KEY="password"
##### S3 instance
# In kubernetes workload this is set from configmap
# For local run this can be the port-forwarded : kubectl exec port-forward service/minio 9001:9000
S3_HOST="localhost"
S3_ACCESS_KEY="backup-access-key"
S3_SECRET_KEY="backup-secret-key"
# Default to 9000
S3_PORT=9001
S3_TLS="n"

#### Cassandra
# Not use when calling CQLSH_COMMAND in kubernetes
SCYLLA_HOST="SELECT 1"
# keyspaces / tables
CQL_KEYSPACES="prod_assets:prod_cdn:prod_data:prod_flux:prod_permalink:prod_stories:prod_tree_db"
CQL_TABLES="prod_assets.access_history:prod_assets.access_policy:prod_assets.entities:prod_cdn.libraries:prod_data.entities:prod_flux.projects:prod_permalink.hits_permalink:prod_permalink.permalink:prod_stories.documents:prod_stories.stories:prod_tree_db.deleted:prod_tree_db.drives:prod_tree_db.items:prod_tree_db.folders"

##### OIDC config For google drive external service account (federated identity).
# NB: for now only grant client_credentials (service account in Keycloak)
OIDC_ISSUER="https://platform.int.youwol.com/auth/realms/kubernetes"
OIDC_CLIENT_ID="google-workload-idp"
OIDC_CLIENT_SECRET="client_secret"
