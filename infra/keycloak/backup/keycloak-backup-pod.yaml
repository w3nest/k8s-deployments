apiVersion: v1
kind: Pod
metadata:
  name: keycloak-backup-pod-1
  namespace: infra
spec:
  containers:
    - name: keycloak-backup
      image: quay.io/keycloak/keycloak:22.0.3
      command: ["tail", "-f", "/dev/null"]  # Keeps the pod running so you can SSH into it
      env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-initial-admin
              key: username
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-initial-admin
              key: password
        - name: KEYCLOAK_SERVER
          value: http://keycloak-service.infra:8080/auth
        # Below is the specification to reach the related postgres database.
        - name: KC_DB
          value: postgres
        - name: KC_DB_URL_HOST
          valueFrom:
            secretKeyRef:
              name: keycloak-pguser-keycloak
              key: host
        - name: KC_DB_URL_DATABASE
          valueFrom:
            secretKeyRef:
              name: keycloak-pguser-keycloak
              key: dbname
        - name: KC_DB_URL_PORT
          valueFrom:
            secretKeyRef:
              name: keycloak-pguser-keycloak
              key: port
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: keycloak-pguser-keycloak
              key: user
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-pguser-keycloak
              key: password
  restartPolicy: Never

# kubectl apply -f keycloak-backup-pod.yaml
# kubectl exec -it keycloak-backup-pod -n infra -- sh
# > /opt/keycloak/bin/kc.sh build
# > /opt/keycloak/bin/kc.sh export --dir /tmp
# Need to find out how to recover the data or send them in some storage.